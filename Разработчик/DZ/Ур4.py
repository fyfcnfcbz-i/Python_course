"""Задача 1: Даны два неупорядоченных набора целых чисел (может быть, с
повторениями). Выдать без повторений в порядке возрастания все те числа, которые
встречаются в обоих наборах.
Пользователь вводит 2 числа. n - кол-во элементов первого множества. m - кол-во
элементов второго множества. Затем пользователь вводит сами элементы множеств."""

"""11 6
2 4 6 8 10 12 10 8 6 4 2
3 6 9 12 15 18
6 12"""

# def fynk(t, t_list):
#     for i in range(t):
#         t_list.append(int(input("Ведите целое число: ")))
#     return t_list

# n = int(input("Введите количество элементов 1 множества: "))
# n_list = []

# print(fynk(n, n_list))

# m = int(input("Введите количество элементов 2 множества: "))
# m_list = []
# print(fynk(m, m_list))

# n_list = set(n_list.split())
# m_list = set(m_list.split())

# i = n_list.intersection(m_list) 

# print(*sorted(i)) # функция сортировки  

"""Задача 2: В фермерском хозяйстве в Карелии выращивают чернику. Она растет на
круглой грядке, причем кусты высажены только по окружности. Таким образом, у
каждого куста есть ровно два соседних. Всего на грядке растет N кустов.
Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них
выросло различное число ягод – на i-ом кусте выросло a ягод.
В этом фермерском хозяйстве внедрена система автоматического сбора черники.
Эта система состоит из управляющего модуля и нескольких собирающих модулей.
Собирающий модуль за один заход, находясь непосредственно перед некоторым
кустом, собирает ягоды с этого куста и с двух соседних с ним.
Напишите программу для нахождения максимального числа ягод, которое может
собрать за один заход собирающий модуль, находясь перед некоторым кустом
заданной во входном файле грядки."""

"""4 -> 1 2 3 4
9"""

# arr = [1, 2, 3, 4]

# a = len(arr)
# b = []

# for i in range(a):
#     b.append(arr[i-2] + arr[i-1] + arr[i])
# print(max(b))
